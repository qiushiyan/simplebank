---
title: simplebank
format: gfm
knitr:
    opts_chunk:
        include: false
---

```{r}
path_link <- function(path, is_dir = TRUE, branch = "main") {
    if (is_dir) {
        type <- "tree"
    } else {
        type <- "blob"
    }
    paste0("[`", path, "`]", "(https://github.com/qiushiyan/simplebank/", type, "/", branch, "/", path, ")")
}
```

## About

This is a fullstack application that implements a simple banking system, where users can create accounts, deposit and withdraw money, and transfer money between accounts.

## Usage

If you have docker-compose installed, simply run

```bash
docker compose up
```

To run it without docker, first install the go dependencies

```bash
go mod tidy
```

Start the backend with

```bash
make run-local
# or
go run app/services/bank-api/main.go | go run app/tooling/logfmt/main.go
```

### Documentation

The backend serves a swagger documentation at `/swagger/index.html`

To update the swagger docs, make sure you have `swag` installed

```bash
go install github.com/swaggo/swag/cmd/swag@latest
```

Then run

```bash
make docs
```

## Design Details

## Folder structure

Each folder represents a different layer of concerns

- `r path_link("app")` application-level code. Consists of the the Next.js frontend app and the backend RESTful API.

- `r path_link("zarf")` configuration files and static assets

## Routing

### Authentication and Authorization

### Error Handling

## Asynchronous Processing

## Logging

`r path_link("foundation/logger")` exports a customized slog-based logger.

`r path_link("app/tooling/logfmt")` is a simple program that converts the JSON logs output by `foundation/logger` to human-readable logs.
